% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/label_transfer.R
\name{transfer_cell_labels}
\alias{transfer_cell_labels}
\title{Transfer cell column data from a reference to a query
cell_data_set.}
\usage{
transfer_cell_labels(
  cds_query,
  reduction_method = c("UMAP", "PCA", "LSI"),
  ref_col_data,
  ref_column_name,
  query_column_name = ref_column_name,
  transform_models_dir = NULL,
  k = 10,
  nn_control = list(),
  top_frac_threshold = 0.5,
  top_next_ratio_threshold = 1.5,
  verbose = FALSE
)
}
\arguments{
\item{cds_query}{the cell_data_set upon which to perform this operation}

\item{reduction_method}{a string specifying the reduced dimension
matrix to use for the label transfer. These are "PCA",
"LSI", and "UMAP". Default is "UMAP".}

\item{ref_col_data}{the reference cds colData data frame, which
is obtained using the colData(cds_ref) function.}

\item{ref_column_name}{a string giving the name of the reference
cds column with the value to copy to the query cds.}

\item{query_column_name}{a string giving the name of the
query cds column where you want the cell stored. The default
is ref_column_name.}

\item{transform_models_dir}{a string giving the name of the transform
model directory to load into the query cds. If it is NULL, use
the transform models in the query cds, which requires that the
reference models were loaded into the query cds before
calling transfer_cell_labels(). The default is NULL.}

\item{k}{an integer giving the number of reference nearest
neighbors to find. This value must be large enough to find
meaningful column value fractions. The default is 10.}

\item{nn_control}{a list of parameters used to make the nearest
neighbors index. See the set_nn_control help for additional
details. The default is to use the global nn_control list.}

\item{top_frac_threshold}{a numeric value giving the minimum
value of the top fraction of reference values required
for transferring the reference value to the query. The top
fraction is the fraction of the k neighbors with the most
frequent value. The default is 0.5.}

\item{top_next_ratio_threshold}{a numeric value giving the
minimum value ratio of the counts of the most frequent to the
second most frequent reference values. The default is 1.5.}

\item{verbose}{a boolean controlling verbose output.}
}
\value{
an updated cell_data_set object
}
\description{
For each cell in a query cell_data_set,
transfer_cell_labels finds the most similar cell data
in a reference cell_data_set and copies it to the query.
}
\details{
transfer_cell_labels() requires a nearest neighbor
index made from a reference reduced dimension matrix, the
reference cell data to transfer, and a query cds. The index
can be made from UMAP coordinates using the
build_nn_index=TRUE option in the reduce_dimensions(...,
build_nn_index=TRUE) function, for example. The query cds
must have been processed with the preprocess_transform()
and reduce_dimension_transform() functions using the models
created when the reference cds was processed, rather than
with preprocess_cds() and reduce_dimension().

The models are made when the reference cds is processed and
must be saved to disk at that time using
save_transform_models(). The load_transform_models() function
loads the models into the query cds where they can be used by
preprocess_transform() and reduce_dimension(). The cells in
the reference and query cdses must be similar in the sense
that they map to similar reduced dimension coordinates.

When the ref_column_name values are discrete, the
sufficiently most frequent value is transferred. When
the values are continuouse the mean of the k nearest
neighbors is transferred.

In the case of discrete values, transfer_cell_labels
processes each query cell as follows. It finds the k nearest
neighbor cells in the reference set, and if at least
top_frac_threshold fraction of them have the same value, it
copies that value to the query_column_name column in the
query cds. If the fraction is below top_frac_threshold,
it checks whether the ratio of the most frequent to the second
most frequent value is at least top_next_ratio_threshold, in
which case it copies the value; otherwise, it sets it to
NA.

Note: Monocle3 does not have an align_transform() function to
apply align_cds()-related transforms at this time. If your
data sets require batch correction, you need to co-embed them.
}
