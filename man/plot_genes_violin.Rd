% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{plot_genes_violin}
\alias{plot_genes_violin}
\title{Plot expression for one or more genes as a violin plot}
\usage{
plot_genes_violin(cds_subset, grouping = "State", min_expr = NULL,
  nrow = NULL, ncol = 1, panel_order = NULL,
  label_by_short_name = TRUE, normalize = TRUE, log_scale = TRUE)
}
\arguments{
\item{cds_subset}{Subset cell_data_set to be plotted.}

\item{grouping}{the cell attribute (e.g. the column of colData(cds)) to
group cells by on the horizontal axis.}

\item{min_expr}{the minimum (untransformed) expression level to use when
plotted the genes. If \code{NULL},
\code{metadata(cds_subset)$lower_detection_limit} is used.}

\item{nrow}{the number of panels per row in the figure.}

\item{ncol}{the number of panels per column in the figure.}

\item{panel_order}{the order in which genes should be layed out
(left-to-right, top-to-bottom). Should be gene_short_name, if
\code{label_by_short_name = TRUE} or gene ID if
\code{label_by_short_name = FALSE}.}

\item{label_by_short_name}{label figure panels by gene_short_name (TRUE) or
feature id (FALSE).}

\item{log_scale}{Logical, whether or not to scale data logarithmically.}
}
\value{
a ggplot2 plot object
}
\description{
Accepts a subset of a cell_data_set and an attribute to group
cells by, and produces a ggplot2 object that plots the level of expression
for each group of cells.
}
\examples{
\dontrun{
library(HSMMSingleCell)
HSMM <- load_HSMM()
my_genes <- HSMM[row.names(subset(rowData(HSMM),
                 gene_short_name \%in\% c("ACTA1", "ID1", "CCNB2"))),]
plot_genes_violin(my_genes, grouping="Hours", ncol=2, min_expr=0.1)
}
}
